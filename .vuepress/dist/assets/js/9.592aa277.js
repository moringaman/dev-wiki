(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{151:function(e,a,n){"use strict";n.r(a);var t=n(0),r=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"docker-documentation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-documentation","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker Documentation")]),n("h2",{attrs:{id:"installation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[e._v("#")]),e._v(" Installation")]),n("h3",{attrs:{id:"docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker")]),n("p",[n("code",[e._v("curl -fsSL get.docker.com -o get-docker.sh")]),n("code",[e._v("sh get-docker.sh")])]),n("h3",{attrs:{id:"docker-machine"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-machine","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker Machine")]),n("pre",[n("code",[e._v("``  base=https://github.com/docker/machine/releases/download/v0.14.0 &&\n\t  curl -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine &&\n    sudo install /tmp/docker-machine /usr/local/bin/docker-machine)) ``\n")])]),n("h3",{attrs:{id:"docker-compose"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker Compose")]),n("pre",[n("code",[e._v("`\ncurl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n`\n")])]),n("h2",{attrs:{id:"images-vs-containers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#images-vs-containers","aria-hidden":"true"}},[e._v("#")]),e._v(" Images vs Containers")]),n("ol",[n("li",[e._v("An image is the binaries and source code that make up a container")]),n("li",[e._v("A container is an instance of that image running as a process")])]),n("h3",{attrs:{id:"running-a-container"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#running-a-container","aria-hidden":"true"}},[e._v("#")]),e._v(" Running a Container")]),n("h4",{attrs:{id:"nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx","aria-hidden":"true"}},[e._v("#")]),e._v(" NGINX")]),n("p",[n("code",[e._v("docker container run --publish 80:80 nginx")])]),n("p",[e._v("This command pulls down the nginx image from the server if it does not exist "),n("br"),e._v("\nlocally. Then it runs it in a new container publishing port 80 to the HOSTS "),n("br"),e._v("\nport 80")]),n("p",[e._v("We can also run")]),n("p",[n("code",[e._v("docker container run --publish 80:80 --detach nginx")])]),n("p",[e._v("This runs the container in the background.\nThe --name switch also allows us to specify our own name for the container")]),n("p",[e._v("We can check the logs for a container by using the command")]),n("p",[n("code",[e._v("docker container logs <container_name>")])]),n("p",[e._v("Stopping containers can be acheived by using "),n("code",[e._v("docker container stop <ID>")])]),n("p",[e._v("Removing containers can be acjieved with "),n("code",[e._v("docker container rm <ID>")])]),n("p",[n("code",[e._v("docker container top <name>")]),e._v(" - Lists the conainers running processes")]),n("p",[n("code",[e._v("docker container inspect <name>")]),e._v(" - Shows config JSON")]),n("p",[n("code",[e._v("docker container stats")]),e._v(" - Live performance data on all containers")]),n("h2",{attrs:{id:"interacting-with-containers-via-terminal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#interacting-with-containers-via-terminal","aria-hidden":"true"}},[e._v("#")]),e._v(" Interacting with Containers Via Terminal")]),n("p",[e._v("It is also possible to run a shell inside your containers so that you can run an interactive /\nshell inside the container to make changes.")]),n("p",[e._v("To do this we use the "),n("strong",[e._v("-it")]),e._v(" command i.e.")]),n("p",[n("code",[e._v("docker container run -it --name webserver nginx bash")])]),n("pre",[n("code",[e._v("**NB** Always remember to specify what terminal emulator you want to use\n")])]),n("h3",{attrs:{id:"starting-an-existing-container-interactively"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#starting-an-existing-container-interactively","aria-hidden":"true"}},[e._v("#")]),e._v(" Starting an existing container interactively")]),n("p",[e._v("It is also possible to interact with a pre-existing terminal by using "),n("strong",[e._v("-ai")]),e._v(" or\nattach, interactively (see below)")]),n("p",[n("code",[e._v("docker container start -ai <container_name>")])]),n("p",[e._v("In order to run a command in an already running container we use")]),n("p",[n("code",[e._v("docker container exec -it <program to run>")])]),n("p"),n("h2",{attrs:{id:"docker-network-concepts-for-private-public-comms"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-network-concepts-for-private-public-comms","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker Network Concepts for Private/Public Comms")]),n("p",[e._v("To see what port(s) are exposed on a running containernwe use.")]),n("p",[n("code",[e._v("docker container port <container_name>")])]),n("p",[e._v("Network settings such as IP address can be descovered using the "),n("strong",[e._v("--inspect")]),e._v(" command as below.")]),n("pre",[n("code",[e._v("``\ndocker container inspect --format \\{\\{ .NetworkSettings.IPAddress \\}\\} webhost\n``\n")])]),n("p",[n("strong",[e._v("NOTE")]),e._v(" inspect returns a json object and --format is used to select nodes in the response.")]),n("h2",{attrs:{id:"docker-networks-cli-management"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-networks-cli-management","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker Networks: Cli Management")]),n("ol",[n("li",[e._v("Show networks - "),n("code",[e._v("docker network ls")])]),n("li",[e._v("Inspect a network - "),n("code",[e._v("docker network inspect")])]),n("li",[e._v("Create a network - "),n("code",[e._v("docker network create --driver")])]),n("li",[e._v("Attech a network to container - "),n("code",[e._v("docker network connect")])]),n("li",[e._v("Detach a network from a container - "),n("code",[e._v("docker network disconnect")])])]),n("h4",{attrs:{id:"creatings-networks-adding-containers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#creatings-networks-adding-containers","aria-hidden":"true"}},[e._v("#")]),e._v(" Creatings networks & adding containers")]),n("p",[e._v("We can create a new network which uses the default network driver of bridge with the command")]),n("p",[n("code",[e._v("docker network create my_app_net")])]),n("p",[e._v("and then add a new container to it with")]),n("p",[n("code",[e._v("docker container run -d --name new_nginx --network my_app_net nginx")])]),n("h4",{attrs:{id:"add-existing-container-to-a-new-netowrk"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#add-existing-container-to-a-new-netowrk","aria-hidden":"true"}},[e._v("#")]),e._v(" Add existing container to a new netowrk")]),n("p",[e._v("We can add existing containers to newly created networks with "),n("strong",[e._v("docker network connect")]),e._v(" as follows")]),n("p",[n("code",[e._v("docker network connect <network_id> <container_id>")])]),n("p",[e._v("Once part of a network containers can talk to each other by using the container name")]),n("p",[n("code",[e._v("docker container run -d exec -it <container_name1> ping <container_name_2>")])]),n("h4",{attrs:{id:"dns-aliases"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dns-aliases","aria-hidden":"true"}},[e._v("#")]),e._v(" DNS ALIASES")]),n("p",[e._v("Docker allows you to have dns aliases whereby two or more different containers running within a virtual docker network can all be qieries using the same DNS name.")]),n("p",[e._v("Use the "),n("strong",[e._v("--net-alias")]),e._v(" command to set the same alias on duplicate containers on your network.")]),n("p",[n("code",[e._v("docker run container -d --network <network_name> --net-alias <alias> --name <container_name> ubuntu:latest")])]),n("h2",{attrs:{id:"docker-images"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-images","aria-hidden":"true"}},[e._v("#")]),e._v(" Docker Images")]),n("h3",{attrs:{id:"commands"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#commands","aria-hidden":"true"}},[e._v("#")]),e._v(" Commands")]),n("p",[n("code",[e._v("docker image ls")]),n("code",[e._v("docker history <name>:<tag>")]),n("code",[e._v("docker image inspect <name>:<tag>")])]),n("h3",{attrs:{id:"image-dockerfile-basics"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#image-dockerfile-basics","aria-hidden":"true"}},[e._v("#")]),e._v(" Image Dockerfile Basics")]),n("p",[e._v("Docker files are recipies for creating docker images and consist of a base os, app installs, command to be run, file copies and configurations, which all make up a desired image.")]),n("p",[e._v("The most common Docker actions are as follows;")]),n("p",[e._v("FROM - This is the distribution wich makes the base of the image, debian, centos, alpine etc..\nENV - The is where you declare any enviroment vriable to be used lated in the file\nRUN - This specifies bash commands to be run such as apt-get update as well as file copies and other such actions\nEXPOSE - This is used to expose ports accessable by the host os\nCMD - This can be used to run any command you want when the container first boots")]),n("h4",{attrs:{id:"building-images-from-dockerfile"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#building-images-from-dockerfile","aria-hidden":"true"}},[e._v("#")]),e._v(" Building images from dockerfile")]),n("p",[e._v("In order to build an image from a dockerfile run,")]),n("p",[n("code",[e._v("docker build -t <tag_name> .")])]),n("p",[e._v("This means build from the current directory and tag it. Docker will detect the dockerfile and executed the steps within it")])])}],!1,null,null,null);a.default=r.exports}}]);